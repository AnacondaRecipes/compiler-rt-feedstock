{% set name = "compiler-rt" %}
{% set version = "8.0.0" %}
{% set build_number = 0 %}
{% set sha256 = "b435c7474f459e71b2831f1a4e3f1d21203cb9c0172e94e9d9b69f50354f21b1" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.src.tar.xz
  url: http://llvm.org/releases/{{ version }}/{{ name }}-{{ version }}.src.tar.xz
  sha256: {{ sha256 }}
  patches:
    - af14bad77d21bdbe48d9ba7eabb0d9edfb812eab.patch

build:
  number: {{ build_number }}
  skip: true  # [win and vc<14]

requirements:
  build:
    - cmake >=3.4.3
    - {{ compiler('cxx') }}   # [not osx]
    - python
  host:
    - clangdev =={{ version }}
    - llvmdev =={{ version }}
  run:
    - libcxx >={{ cxx_compiler_version }}  # [osx]
  run_constrained:
    - clangdev =={{ version }}

test:
  commands:
    - if not exist %LIBRARY_INC%\\include\\sanitizer\\asan_interface.h exit 1     # [win]
    - test -f $PREFIX/include/sanitizer/asan_interface.h                  # [unix]

about:
  home: http://llvm.org/
  license: NCSA
  license_file: LICENSE.TXT
  summary: compiler-rt runtime libraries
  description: |
    builtins - low-level target-specific hooks required by code generation and other
      runtime components
    sanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,
      MemorySanitizer, LeakSanitizer, DataFlowSanitizer
    profile - library which is used to collect coverage information
    BlocksRuntime - target-independent implementation of Apple "Blocks" runtime
      interfaces

extra:
  recipe-maintainers:
    - SylvainCorlay
    - inducer
    - jakirkham
    - isuruf
